
syntax = "proto2";

import 'nanopb.proto';

message SiemensLoRaIAQOTAProtocol{
    option (nanopb_msgopt).no_unions = true;

    message LoRaOTACheckUpgradeRequest {
        required string firmware_type = 1;
        required string current_fw_version = 2;
        required string origin_md5 = 3;
    }

    message LoRaOTACheckUpgradeResponse {
        required bool upgrade_available = 1;
        required bool diff_available = 2;
        optional string target_fw_version = 3;
    }

    message LoRaOTAGetMetaRequest {
        required string target_fw_version = 2;
        required string current_fw_version = 1;
        required bool as_diff = 3;
        required string firmware_type = 4;
    }

    message LoRaOTAGetMetaResponse {
        required uint32 target_size = 1;
        required string target_md5 = 2;
        optional string diff_md5 = 3;
        optional uint32 diff_size = 4;
    }

    message LoRaOTAGetChunkRequest {
        required string target_fw_version = 1;
        required uint32 offset  = 2;
        required uint32 size    = 3;
        optional string current_fw_version = 4;
        optional bool as_diff = 5;
        required string firmware_type = 6;
    }

    message LoRaOTAGetChunkResponse {
        required uint32 length = 1 [(nanopb).int_size = IS_8];
        required bytes data = 2;
        required uint32 offset = 3;
    }

    message LoRaOTAErrorResponse {
        required string error = 1;
        enum LoRaOTAErrorType {
            LORA_OTA_ERROR_BUSY_TRY_AGAIN_LATER = 0;
            LORA_OTA_ERROR_ABORT = 1;
            LORA_OTA_ERROR_UNKNOWN = 2;
        }
        required LoRaOTAErrorType error_type = 2;
    }

    oneof action {
        LoRaOTACheckUpgradeRequest    check_request    = 1;
        LoRaOTACheckUpgradeResponse   check_response   = 2;
        LoRaOTAGetMetaRequest         meta_request     = 3;
        LoRaOTAGetMetaResponse        meta_response    = 4;
        LoRaOTAGetChunkRequest        chunk_request    = 5;
        LoRaOTAGetChunkResponse       chunk_response   = 6;
        LoRaOTAErrorResponse          error_response   = 7;
    }

}
