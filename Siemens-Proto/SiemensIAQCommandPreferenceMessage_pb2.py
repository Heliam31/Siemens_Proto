# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: SiemensIAQCommandPreferenceMessage.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import nanopb_pb2 as nanopb__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n(SiemensIAQCommandPreferenceMessage.proto\x1a\x0cnanopb.proto\"\xe0\x01\n\"SiemensIAQCommandPreferenceMessage\x12G\n\x04mode\x18\x01 \x02(\x0e\x32\x39.SiemensIAQCommandPreferenceMessage.SiemensPreferenceMode\"q\n\x15SiemensPreferenceMode\x12\x10\n\x0cPREF_GENERAL\x10\x00\x12\x15\n\x11PREF_PRODUCTIVITY\x10\x01\x12\x0e\n\nPREF_SLEEP\x10\x02\x12\x10\n\x0cPREF_ALLERGY\x10\x03\x12\r\n\tPREF_BABY\x10\x04')



_SIEMENSIAQCOMMANDPREFERENCEMESSAGE = DESCRIPTOR.message_types_by_name['SiemensIAQCommandPreferenceMessage']
_SIEMENSIAQCOMMANDPREFERENCEMESSAGE_SIEMENSPREFERENCEMODE = _SIEMENSIAQCOMMANDPREFERENCEMESSAGE.enum_types_by_name['SiemensPreferenceMode']
SiemensIAQCommandPreferenceMessage = _reflection.GeneratedProtocolMessageType('SiemensIAQCommandPreferenceMessage', (_message.Message,), {
  'DESCRIPTOR' : _SIEMENSIAQCOMMANDPREFERENCEMESSAGE,
  '__module__' : 'SiemensIAQCommandPreferenceMessage_pb2'
  # @@protoc_insertion_point(class_scope:SiemensIAQCommandPreferenceMessage)
  })
_sym_db.RegisterMessage(SiemensIAQCommandPreferenceMessage)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _SIEMENSIAQCOMMANDPREFERENCEMESSAGE._serialized_start=59
  _SIEMENSIAQCOMMANDPREFERENCEMESSAGE._serialized_end=283
  _SIEMENSIAQCOMMANDPREFERENCEMESSAGE_SIEMENSPREFERENCEMODE._serialized_start=170
  _SIEMENSIAQCOMMANDPREFERENCEMESSAGE_SIEMENSPREFERENCEMODE._serialized_end=283
# @@protoc_insertion_point(module_scope)
